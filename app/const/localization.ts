export const localization = {
  pageTitle: 'Specify 7 Test Panel',
  yes: 'Yes',
  no: 'No',
  add: 'Add',
  delete: 'Delete',
  goBack: 'Go Back',
  cancel: 'Cancel',
  loading: 'Loading...',
  dashboard: 'Dashboard',
  errorOccurred: 'Unexpected error occurred',
  launch: 'Launch',
  readyForTesting: 'Ready for Testing',
  customDeployments: 'Custom Deployments',
  automatic: 'Automatic',
  automaticDescription:
    'This instance was deployed automatically because it is ready for ' +
    'testing',
  ready: 'Ready',
  fetching: 'Fetching',
  starting: 'Starting',
  collection: 'Collection',
  discipline: 'Discipline',
  institution: 'Institution',
  specifyVersion: 'Specify Version',
  database: 'Database',
  databases: 'Databases',
  saveChanges: 'Save Changes',
  destroy: 'Destroy',
  addInstance: 'Add Instance',
  branches: 'Branches:',
  staleBranches: 'Stale Branches:',
  serverName: (index: number) => `Server #${index}`,
  uploadDatabasesFirst: 'Upload database first',
  schemaVersion: 'Schema Version',
  corruptDatabase: 'corrupt database',
  lastAccessed: 'Last accessed',
  notes: 'Notes',
  newDeployment: 'New Deployment',
  close: 'Close',
  remove: 'Remove',
  deployedAt: 'Deployed at',
  buildDate: 'Build Date',
  frozenDeploymentDescription:
    'This deployment is frozen to prevent accidental changes.\n' +
    'You can unfreeze it by clearing the deployment notes field',
  groupName: 'Group Name',
  never: 'never',
  listUsers: 'List Users',
  unexpectedError: 'Unexpected Error',
  reload: 'Reload',
  previousPage: 'Previous page',
  unexpectedErrorHasOccurred: 'An unexpected error has occurred.',
  notFoundHeader: 'Oops! Nothing was found',
  notFoundDescription: `The page you are looking for might have been removed,
      had its name changed or is temporarily unavailable.`,
  returnToHomePage: '← Return to homepage',
  signIn: 'Sign In ',
  signInWithGitHub: 'Sign in with GitHub',
  download: 'Download',
  uploadNew: 'Upload New',
  usersOfDatabase: (database: string) => `Specify Users in "${database}"`,
  deleteDialogTitle: 'Delete Database?',
  deleteDialogMessage: (database: string) =>
    `Are you sure you want to delete "${database}" database?`,
  makeSuperUser: 'Make super user',
  calculateSizes: 'Calculate sizes',
  uploadNewDatabase: 'Upload new database',
  databaseName: 'Database Name',
  upload: 'Upload',
  uploading: 'Uploading',
  diskUsage: 'Disk Usage:',
  notEnoughSpace:
    'Warning: there may be not enough space on the server to upload this file',
  mb: 'MB',
  nameConflict:
    'Database with this name already exists. Please delete it first',
} as const;
